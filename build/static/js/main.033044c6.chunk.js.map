{"version":3,"sources":["components/Button/Button.js","components/BtnList/BtnList.js","components/PeopleCard/PeopleCard.js","components/PeopleList/PeopleList.js","components/PlanetsCard/PlanetsCard.js","components/PlanetsList/PlanetsList.js","components/FilmsCard/FilmsCard.js","components/FilmsList/FilmsList.js","components/SpeciesCard/SpeciesCard.js","components/SpeciesList/SpeciesList.js","components/VehiclesCard/VehiclesCard.js","components/VehiclesList/VehiclesList.js","components/StarshipsCard/StarshipsCard.js","components/StarshipsList/StarshipsList.js","components/SearchBox/SearchBox.js","Content.js","App.js","serviceWorker.js","index.js"],"names":["Button","_ref","name","onButtonPress","react_default","a","createElement","style","marginTop","marginBottom","className","onClick","charAt","toUpperCase","slice","capitalizeFirstLetter","BtnList","btnName","btnLoop","map","info","i","components_Button_Button","key","PeopleCard","height","mass","haircolor","skincolor","eyeColor","birthyear","gender","eyecolor","width","margin","PeopleList","cardLoop","updated","data","components_PeopleCard_PeopleCard","hair_color","skin_color","eye_color","birth_year","PlanetsCard","rotation_period","orbital_period","diameter","climate","gravity","terrain","population","PlanetsList","components_PlanetsCard_PlanetsCard","FilmsCard","title","episode_id","opening_crawl","director","producer","release_date","FilmsList","components_FilmsCard_FilmsCard","SpeciesCard","language","homeworld","classification","designation","average_height","skin_colors","hair_colors","eye_colors","average_lifespan","SpeciesList","components_SpeciesCard_SpeciesCard","VehiclesCard","model","manufacturer","cost_in_credits","max_atmosphering_speed","vehicle_class","crew","VehiclesList","components_VehiclesCard_VehiclesCard","StarshipsCard","hyperdrive_rating","starship_class","StarshipsList","components_StarshipsCard_StarshipsCard","SearchBox","searchfield","searchChange","type","placeholder","onChange","Content","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","event","setState","target","value","state","updatedData","inherits","createClass","_fetchData","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","fetch","concat","route","sent","json","results","stop","apply","arguments","fetchData","prevProps","_this2","filteredInfo","filter","toLowerCase","includes","length","components_SearchBox_SearchBox","components_PeopleList_PeopleList","components_PlanetsList_PlanetsList","components_FilmsList_FilmsList","components_SpeciesList_SpeciesList","components_VehiclesList_VehiclesList","components_StarshipsList_StarshipsList","Component","App","ButtonPress","btnList","document","getElementsByTagName","classList","handleScroll","window","scrollY","scrolling","addEventListener","then","response","keys","removeEventListener","position","top","zIndex","backgroundColor","components_BtnList_BtnList","src_Content","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.033044c6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst Button=({name,onButtonPress})=>{\r\n\t// capitalize every first letter of the button name\r\n\tfunction capitalizeFirstLetter(name) {\r\n    return name.charAt(0).toUpperCase() + name.slice(1);\r\n}\r\n\treturn (\r\n\t\t<button style={{marginTop:'12px',marginBottom:'10px'}} className=\"f6  pointer shadow-4 dim br2 ph3 pv2 mb2 dib white bg-purple\"\r\n\t\tonClick={onButtonPress}\r\n\t\t>\r\n\t\t{capitalizeFirstLetter(name)}\r\n\t\t\r\n\t\t</button>\r\n\t\t)\r\n};\r\n\r\n\r\nexport default Button;","import React from 'react';\r\nimport Button from '../Button/Button'\r\n\r\nconst BtnList=({btnName,onButtonPress})=>{\r\n\t//looping thru the btnName and creating a button for each name+adding event and props\r\n\tconst btnLoop=btnName.map((info,i)=>{\r\n\t\treturn (\r\n\t\t\t<Button\r\n\t\t\tkey={i}\r\n\t\t\tname={info}\r\n\t\t\tonButtonPress={() => onButtonPress(info,i)}\r\n\t\t\t\r\n\t\t\t/>\r\n\t\t\t) \r\n\t})\r\n\treturn (\r\n\t\t<div>\r\n\t\t{btnLoop}\r\n\t\t</div>\r\n\t\t)\r\n};\r\n\r\n\r\nexport default BtnList;","import React from 'react';\r\n\r\n\r\nconst PeopleCard= ({name,height,mass,haircolor,skincolor,eyeColor,birthyear,gender,eyecolor}) => {\r\n\treturn (\r\n\t\t<div style={{width: '400px' ,height: '350px', margin: '10px'}}\r\n\r\n\t\tclassName= 'tc bg-washed-blue shadow-4 br2 pa3 ba dark-gray b--black-10 mv4 w-100 w-75-m w-45-l mw6 center'>\r\n\t\t\t\r\n\t\t\t<h1>{name} </h1>\r\n\t\t\t<p>Height : {height} </p>\r\n\t\t\t<p>Mass : {mass} </p>\r\n\t\t\t<p>Hair color : {haircolor} </p>\r\n\t\t\t<p>Skin color :  {skincolor} </p>\r\n\t\t\t<p>Eye color :  {eyeColor} </p>\r\n\t\t\t<p>Birth year :  {birthyear} </p>\r\n\t\t\t<p>Gender :  {gender} </p>\r\n\t\t\t\t\t\r\n\t\t</div>\r\n\t\t);\r\n}\r\nexport default PeopleCard;","import React from 'react';\r\nimport PeopleCard from '../PeopleCard/PeopleCard';\r\n\r\n\r\n\r\nconst PeopleList= ({updated}) => {\r\n\t//looping thru the updated array and creating a card for each array item\r\n\tconst cardLoop=updated.map((data,i)=>{\r\n\t\treturn (\r\n\t\t\t\r\n\t\t\t<PeopleCard\r\n\t\t\tkey={i}\r\n\t\t\tname = {data.name} \r\n\t\t\theight = {data.height}\r\n\t\t\tmass = {data.mass}\r\n\t\t\thaircolor = {data.hair_color}\r\n\t\t\tskincolor =  {data.skin_color}\r\n\t\t\teyeColor =  {data.eye_color}\r\n\t\t\tbirthyear =  {data.birth_year}\r\n\t\t\tgender =  {data.gender}\r\n\t\t\t\r\n\t\t\t\r\n\t\t/>\r\n\t\t\r\n\t\t)\r\n\t})\r\n\r\n\treturn (\t\t\r\n\t\t<div className='container' >\r\n\t\t\t{cardLoop}\r\n\t\t</div>\r\n\t\t\r\n\t\t);\r\n}\r\nexport default PeopleList;","import React from 'react';\r\n\r\n\r\nconst PlanetsCard= ({name,rotation_period,orbital_period,diameter,climate,gravity,terrain,population}) => {\r\n\treturn (\r\n\t\t<div style={{width: '400px' ,height: '350px', margin: '10px'}}\r\n\r\n\t\tclassName= 'tc br2 bg-washed-blue shadow-4 pa3 ba dark-gray b--black-10 mv4 w-100 w-75-m w-45-l mw6 center'>\r\n\t\t\t\r\n\t\t\t<h1>{name} </h1>\r\n\t\t\t<p>Rotation period : {rotation_period} </p>\r\n\t\t\t<p>Orbital period : {orbital_period} </p>\r\n\t\t\t<p>Diameter : {diameter} </p>\r\n\t\t\t<p>Climate :  {climate} </p>\r\n\t\t\t<p>Gravity :  {gravity} </p>\r\n\t\t\t<p>Terrain :  {terrain} </p>\r\n\t\t\t<p>Population :  {population} </p>\r\n\t\t\t\t\t\r\n\t\t</div>\r\n\t\t);\r\n}\r\nexport default PlanetsCard;","import React from 'react'; \r\nimport PlanetsCard from '../PlanetsCard/PlanetsCard'; \r\n\r\nconst PlanetsList= ({updated}) => {\r\n\tconst cardLoop=updated.map((data,i)=>{\r\n\t\treturn (\r\n\t\t\t\r\n\t\t\t<PlanetsCard\r\n\t\t\tkey={i}\r\n\t\t\tname = {data.name} \r\n\t\t\trotation_period = {data.rotation_period}\r\n\t\t\torbital_period = {data.orbital_period}\r\n\t\t\tdiameter = {data.diameter}\r\n\t\t\tclimate =  {data.climate}\r\n\t\t\tgravity =  {data.gravity}\r\n\t\t\tterrain =  {data.terrain}\r\n\t\t\tpopulation =  {data.population}\r\n\t\t\t\r\n\t\t\t\r\n\t\t/>\r\n\t\t\r\n\t\t)\r\n\t})\r\n\r\n\treturn (\t\t\r\n\t\t<div className='container' >\r\n\t\t\t{cardLoop}\r\n\t\t</div>\r\n\t\t\r\n\t\t);\r\n}\r\nexport default PlanetsList;","import React from 'react';\r\n\r\n\r\nconst FilmsCard= ({title,episode_id,opening_crawl,director,producer,release_date}) => {\r\n\treturn (\r\n\t\t<div style={{width: '400px' ,height: '480px', margin: '10px'}}\r\n\r\n\t\tclassName= 'tc bg-washed-blue shadow-4 br2 pa3 ba dark-gray b--black-10 mv4 w-100 w-75-m w-45-l mw6 center'>\r\n\t\t\t\r\n\t\t\t<h1>{title} </h1>\r\n\t\t\t<p>Episode  : {episode_id} </p>\r\n\t\t\t<p>Director : {director} </p>\r\n\t\t\t<p>Producer : {producer} </p>\r\n\t\t\t<p>{opening_crawl} </p>\r\n\t\t\t<p>Release date :  {release_date} </p>\r\n\t\t\t\r\n\t\t\t\t\t\r\n\t\t</div>\r\n\t\t);\r\n}\r\nexport default FilmsCard;","import React from 'react';\r\nimport FilmsCard from '../FilmsCard/FilmsCard';\r\n\r\n\r\n\r\nconst FilmsList= ({updated}) => {\r\n\t//looping thru the updated array and creating a card for each array item\r\n\tconst cardLoop=updated.map((data,i)=>{\r\n\t\treturn (\t\t\r\n\t\t\t<FilmsCard\r\n\t\t\tkey={i}\r\n\t\t\ttitle = {data.title} \r\n\t\t\tepisode_id = {data.episode_id}\r\n\t\t\topening_crawl = {data.opening_crawl}\r\n\t\t\tdirector = {data.director}\r\n\t\t\tproducer =  {data.producer}\r\n\t\t\trelease_date =  {data.release_date}\t\t\r\n\t\t/>\r\n\t\t\r\n\t\t)\r\n\t})\r\n\r\n\treturn (\t\t\r\n\t\t<div className='container' >\r\n\t\t\t{cardLoop}\r\n\t\t</div>\r\n\t\t\r\n\t\t);\r\n}\r\nexport default FilmsList;","import React from 'react';\r\n\r\n\r\nconst SpeciesCard= ({language,homeworld,name,classification,designation,average_height,skin_colors,hair_colors,eye_colors,average_lifespan}) => {\r\n\treturn (\r\n\t\t<div style={{width: '400px' ,height: '400px', margin: '10px'}}\r\n\r\n\t\tclassName= 'tc br2 pa3 bg-washed-blue shadow-4 ba dark-gray b--black-10 mv4 w-100 w-75-m w-45-l mw6 center'>\r\n\t\t\t\r\n\t\t\t<h1>{name} </h1>\r\n\t\t\t<p>Classification : {classification} </p>\r\n\t\t\t<p>Designation : {designation} </p>\r\n\t\t\t<p>Average height : {average_height} </p>\r\n\t\t\t<p>Skin colors :  {skin_colors} </p>\r\n\t\t\t<p>Hair colors :  {hair_colors} </p>\r\n\t\t\t<p>Eye colors :  {eye_colors} </p>\r\n\t\t\t<p>Average lifespan :  {average_lifespan} </p>\r\n\t\t\t<p>Language : {language} </p>\r\n\t\t\t\t\t\r\n\t\t</div>\r\n\t\t);\r\n}\r\nexport default SpeciesCard;","import React from 'react';\r\nimport SpeciesCard from '../SpeciesCard/SpeciesCard';\r\n\r\n\r\n\r\nconst SpeciesList= ({updated}) => {\r\n\tconst cardLoop=updated.map((data,i)=>{\r\n\t\treturn (\r\n\t\t\t\r\n\t\t\t<SpeciesCard\r\n\t\t\tkey={i}\r\n\t\t\tlanguage = {data.language} \r\n\t\t\thomeworld = {data.homeworld}\r\n\t\t\tname = {data.name}\r\n\t\t\tclassification = {data.classification}\r\n\t\t\tdesignation =  {data.designation}\r\n\t\t\taverage_height =  {data.average_height}\r\n\t\t\tskin_colors =  {data.skin_colors}\r\n\t\t\thair_colors =  {data.hair_colors}\r\n\t\t\teye_colors =  {data.eye_colors}\r\n\t\t\taverage_lifespan =  {data.average_lifespan}\r\n\t\t\t\t\t\t\r\n\t\t\t\r\n\t\t/>\r\n\t\t\r\n\t\t)\r\n\t})\r\n\r\n\treturn (\t\t\r\n\t\t<div className='container' >\r\n\t\t\t{cardLoop}\r\n\t\t</div>\r\n\t\t\r\n\t\t);\r\n}\r\nexport default SpeciesList;","import React from 'react';\r\n\r\n\r\nconst VehiclesCard= ({model,manufacturer,name,cost_in_credits,max_atmosphering_speed,vehicle_class,crew}) => {\r\n\treturn (\r\n\t\t<div style={{width: '400px' ,height: '350px', margin: '10px'}}\r\n\r\n\t\tclassName= 'tc br2 bg-washed-blue shadow-4 pa3 ba dark-gray b--black-10 mv4 w-100 w-75-m w-45-l mw6 center'>\r\n\t\t\t\r\n\t\t\t<h1>{name} </h1>\r\n\t\t\t<p>Model : {model} </p>\r\n\t\t\t<p>Manufacturer : {manufacturer} </p>\r\n\t\t\t<p>Cost in credits : {cost_in_credits} </p>\r\n\t\t\t<p>Max atmosphering speed :  {max_atmosphering_speed} </p>\r\n\t\t\t<p>Vehicle class :  {vehicle_class} </p>\r\n\t\t\t<p>Crew : {crew} </p>\r\n\t\t\t\r\n\t\t\t\t\t\r\n\t\t</div>\r\n\t\t);\r\n}\r\nexport default VehiclesCard;","import React from 'react';\r\nimport VehiclesCard from '../VehiclesCard/VehiclesCard';\r\n\r\n\r\n\r\nconst VehiclesList= ({updated}) => {\r\n\tconst cardLoop=updated.map((data,i)=>{\r\n\t\treturn (\r\n\t\t\t\r\n\t\t\t<VehiclesCard\r\n\t\t\tkey={i}\r\n\t\t\tname = {data.name} \r\n\t\t\tmodel = {data.model}\r\n\t\t\tmanufacturer = {data.manufacturer}\r\n\t\t\tcost_in_credits = {data.cost_in_credits}\r\n\t\t\tmax_atmosphering_speed =  {data.max_atmosphering_speed}\r\n\t\t\tcrew =  {data.crew}\r\n\t\t\tvehicle_class =  {data.vehicle_class}\r\n\t\t\r\n\t\t\t/>\r\n\t\t\r\n\t\t)\r\n\t})\r\n\r\n\treturn (\t\t\r\n\t\t<div className='container' >\r\n\t\t\t{cardLoop}\r\n\t\t</div>\r\n\t\t\r\n\t\t);\r\n}\r\nexport default VehiclesList;","import React from 'react';\r\n\r\n\r\nconst StarshipsCard= ({hyperdrive_rating,starship_class,model,manufacturer,name,cost_in_credits,max_atmosphering_speed,vehicle_class,crew}) => {\r\n\treturn (\r\n\t\t<div style={{width: '400px' ,height: '380px', margin: '10px'}}\r\n\r\n\t\tclassName= 'tc br2 bg-washed-blue shadow-4 pa3 ba dark-gray b--black-10 mv4 w-100 w-75-m w-45-l mw6 center'>\r\n\t\t\t\r\n\t\t\t<h1>{name} </h1>\r\n\t\t\t<p>Model : {model} </p>\r\n\t\t\t<p>Manufacturer : {manufacturer} </p>\r\n\t\t\t<p>Cost in credits : {cost_in_credits} </p>\r\n\t\t\t<p>Max atmosphering speed :  {max_atmosphering_speed} </p>\r\n\t\t\t<p>Crew : {crew} </p>\r\n\t\t\t<p>Starship class : {starship_class} </p>\r\n\t\t\t<p>Hyperdrive rating : {hyperdrive_rating} </p>\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\t\t\r\n\t\t</div>\r\n\t\t);\r\n}\r\nexport default StarshipsCard;","import React from 'react';\r\nimport StarshipsCard from '../StarshipsCard/StarshipsCard';\r\n\r\n\r\n\r\nconst StarshipsList= ({updated}) => {\r\n\tconst cardLoop=updated.map((data,i)=>{\r\n\t\treturn (\r\n\t\t\t\r\n\t\t\t<StarshipsCard\r\n\t\t\tkey={i}\r\n\t\t\tname = {data.name} \r\n\t\t\tmodel = {data.model}\r\n\t\t\tmanufacturer = {data.manufacturer}\r\n\t\t\tcost_in_credits = {data.cost_in_credits}\r\n\t\t\tmax_atmosphering_speed =  {data.max_atmosphering_speed}\r\n\t\t\tcrew =  {data.crew}\r\n\t\t\tvehicle_class =  {data.vehicle_class}\r\n\t\t\thyperdrive_rating={data.hyperdrive_rating}\r\n\t\t\tstarship_class={data.starship_class}\t\t\t\r\n\t\t\t\r\n\t\t/>\r\n\t\t\r\n\t\t)\r\n\t})\r\n\r\n\treturn (\t\t\r\n\t\t<div className='container' >\r\n\t\t\t{cardLoop}\r\n\t\t</div>\r\n\t\t\r\n\t\t);\r\n}\r\nexport default StarshipsList;","import React from 'react';\r\n\r\nconst SearchBox=({searchfield,searchChange})=>{\r\n\treturn (\r\n\t\t<div className= 'pa2 tc' >\r\n\t\t\t<input\r\n\t\t\tstyle={{width:'250px'}} \r\n\t\t\tclassName= 'pa2 tc shadow-4 br2 input-reset ba bg-white hover-bg-black hover-white'\r\n\t\t\ttype='search' \r\n\t\t\tplaceholder='Search'\r\n\t\t\tonChange={searchChange}\r\n\t\t\t/>\r\n\t\t\t\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default SearchBox;","import React, { Component } from 'react';\r\nimport PeopleList from './components/PeopleList/PeopleList'; \r\nimport './content.css';\r\nimport PlanetsList from './components/PlanetsList/PlanetsList'; \r\nimport FilmsList from './components/FilmsList/FilmsList';\r\nimport SpeciesList from './components/SpeciesList/SpeciesList'; \r\nimport VehiclesList from './components/VehiclesList/VehiclesList';   \r\nimport StarshipsList from './components/StarshipsList/StarshipsList';\r\nimport SearchBox from './components/SearchBox/SearchBox';    \r\n\r\nexport class Content extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state={\r\n\t\t\tupdatedData:[],\r\n            searchfield:''\r\n\t\t}\r\n\t}\r\n\r\nsearchChange=(event)=>{\r\n  //getting the input value (from the search bar)\r\n    this.setState({searchfield: event.target.value})\r\n}\r\n\r\nasync fetchData(){\r\n  //getting data from swapi in terms of route\r\n    const res = await fetch(`https://swapi.co/api/${this.props.route}/`);\r\n    const data = await res.json();\r\n    this.setState({updatedData : data.results})\r\n    }\r\n\r\ncomponentDidMount(){\r\n  //getting data from swapi before the render\r\n        this.fetchData();\r\n    }\r\ncomponentDidUpdate(prevProps) {\r\n  //update the new data(updatedData) with the new routes 'see fetchdata()'\r\n    if (this.props.route !== prevProps.route) {\r\n    this.setState({updatedData: []});\r\n    this.setState({searchfield: ''});\r\n    this.fetchData();\r\n        }\r\n    }\r\nrender(){\r\n  //filtering updatedData array where (include) data.title or data.name=input.value\r\nconst filteredInfo = this.state.updatedData.filter(data => {\r\n            let a;\r\n            if(data.title){\r\n                a = data.title;\r\n            } else {\r\n                a = data.name;\r\n            }\r\n            return a.toLowerCase().includes(this.state.searchfield.toLowerCase())\r\n        });\r\n    if(this.state.updatedData.length<1){\r\n        return (<div>\r\n            <h1 className='container' >Loading...</h1>\r\n        </div>)\r\n    }else{\r\n      //setting the route (which components correspond to a route)\r\n            switch(this.props.route){\r\n                case 'people':\r\n                return(\r\n                <div >\r\n                 <SearchBox  searchChange={this.searchChange} />\r\n                 <div className='container'>\r\n                 <PeopleList  updated={filteredInfo} />\r\n                 </div>\r\n                 </div>\r\n                 )\r\n                case 'planets':\r\n                return(\r\n                <div>\r\n                <SearchBox searchChange={this.searchChange} />\r\n                <div className='container'>\r\n                  <PlanetsList  updated={filteredInfo} />\r\n                  </div>\r\n                </div>\r\n                 )\r\n                case 'films':\r\n                return(\r\n                <div>\r\n                <SearchBox searchChange={this.searchChange} />\r\n                <div className='container' >\r\n                  <FilmsList  updated={filteredInfo} />\r\n                  </div>\r\n                </div>\r\n                 )\r\n                case 'species':\r\n                return(\r\n                <div>\r\n                <SearchBox searchChange={this.searchChange} />\r\n                <div className='container' >\r\n                  <SpeciesList  updated={filteredInfo} />\r\n                  </div>\r\n                </div>\r\n                 )\r\n                case 'vehicles':\r\n                return(\r\n                <div>\r\n                <SearchBox searchChange={this.searchChange} />\r\n                <div className='container' >\r\n                  <VehiclesList  updated={filteredInfo} />\r\n                  </div>\r\n                </div>\r\n                 )\r\n                case 'starships':\r\n                return(\r\n                <div>\r\n                <SearchBox searchChange={this.searchChange} />\r\n                <div className='container' >\r\n                  <StarshipsList  updated={filteredInfo} />\r\n                  </div>\r\n                </div>                                            \r\n                    )\r\n                default:\r\n                break;\r\n            }\r\n        }\r\n    \r\n    }\r\n\r\n}\r\nexport default Content;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport BtnList from './components/BtnList/BtnList';\nimport Content from \"./Content\";\n \n\nclass App extends Component {\n  constructor(){\n    super()\n      this.state={\n        btnName:[],\n        route:'people',\n        scrolling:''\n        \n      }\n    }\n\n    componentDidMount() {\n      //adding a sticky navbar\n      window.addEventListener('scroll', this.handleScroll);\n      //getting data from swapi(button name)\n    fetch('https://swapi.co/api/').then(response=>{\n      return response.json()\n    })\n    .then(name=>{\n      //updating the state (btnName) with swapi data\n      this.setState({btnName:Object.keys(name)})\n    });\n    \n  };\n\n  \n  ButtonPress =(route,event)=>{\n    //Changing the route on a button click\n    this.setState({route : route})\n    //changing the btn style when clicked\n    const btnList=document.getElementsByTagName('button');\n    for (var i = 0; i < btnList.length; i++) {\n      btnList[i].classList.value=\"f6  pointer shadow-4 dim br2 ph3 pv2 mb2 dib white bg-purple\"\n    }\n    \n    btnList[event].classList.value=\"f6  pointer shadow-4 dim br2 ph3 pv2 mb2 dib white bg-black\"\n    }\n\n  handleScroll=(event)=> {\n    //adding a sticky navbar\n    //setting when the navbar should stick to the top of the browser\n      if (window.scrollY < 300 && this.state.scrolling === true) {\n          this.setState({scrolling: false})\n      }\n      else if (window.scrollY > 300 && this.state.scrolling !== true) {\n          this.setState({scrolling: true})\n      }\n  }\n\n  componentWillUnmount() {\n    //removing the scroll event\n      window.removeEventListener('scroll', this.handleScroll);\n  }\n  \n  \n  render() {\n    return (\n      <div>\n      <div className=\"App\">\n      <div className=\"bckGrnd\">\n      <br/><br/><h1 className='colorY' >May<br/>SWAPi<br/>Be with you !</h1>\n      </div>\n      <div className='shadow-4' style={{position: this.state.scrolling ? 'fixed' : 'relative', top: 0, width: '100vw', zIndex: 1,backgroundColor:'#F1E4E4',marginTop:'-10px'}}>\n      <BtnList  onButtonPress={this.ButtonPress} btnName={this.state.btnName} />\n      </div>\n      </div>\n      <Content route={this.state.route} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}